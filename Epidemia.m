## oregonator differential equationclc;                                  % apaga a telaclear all;                            % zera as variáveisclose all;                            % fecha as figurasx0 = [499; 1; 0 ];                    % N = 500 --> S=499; I=1; R=0.t = linspace (0, 100, 100);          % 100 diasfunction xdot = f (x, t)              % definindo a função  xdot = zeros (3,1);                 % derivadas inicias são nulas %% S = x(1)  I = x(2)  R = x(3)    beta = 1e-3;  r    = 1e-1;   xdot(1) = -beta*x(1)*x(2);           % beta = 1e-3           xdot(2) = beta*x(1)*x(2) - r*x(2);   % r = 1e-1  xdot(3) = r*x(2);endfunction%%%%% Resposta temporal quando um individuo é contaminadofigure(1)y = lsode ("f", x0, t);                              % resolve as equaçõesplot(t,y,"linewidth", 3); legend("S","I","R");       % plota o resultadoset(gca, "linewidth", 3, "fontsize", 23);title('Comportamento do processo SIR');xlabel('Tempo em dias');ylabel('Numero de individuos');% saveas (1, "SIR_tempo.eps","eps");%%%%% Plano de fase para a condição anteriorfigure(2)  beta = 1e-3;  r    = 1e-1;quiver(y(:,1),y(:,2),-beta*y(:,1).*y(:,2),beta*y(:,1).*y(:,2) - r*y(:,2));set(gca, "linewidth", 3, "fontsize", 23);title('Plano de fase');xlabel('Individuos suscetiveis');ylabel('Individuos infectados');% saveas (2, "SIR_plano_de_Fase.eps","eps");